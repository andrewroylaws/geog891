---
title: "Lab1"
author: "Andrew Laws"
date: "9/10/2021"
output:
  html_document: default
  pdf_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(sf)
library(sp)

#set data
p.counties <- "./data/orig/County_Boundaries.shp"
p.stations <- "./data/orig/Non-Tidal_Water_Quality_Monitoring_Stations_in_the_Chesapeake_Bay.shp"

#load into sf
d.counties <- sf::read_sf(p.counties)
d.stations <- sf::read_sf(p.stations)
```

```{r EDA}
glimpse(d.counties)
glimpse(d.counties)
```
```{r functions}
d.counties %>% dplyr::select(GEOID10, ALAND10) %>% head()

d.counties %>% dplyr::select(GEOID10:CLASSFP10) %>% head()

d.counties %>% dplyr::select(-(GEOID10:CLASSFP10)) %>% head()
```


```{r grouping}
d.counties %>% group_by(STATEFP10) %>% mutate(stateLandArea = sum(ALAND10))

d.counties %>% as_tibble() %>% dplyr::select(-geometry) %>%
  group_by(STATEFP10) %>%
  summarise(stateLandArea = sum(ALAND10))
```


```{r plots, echo=FALSE}
d.counties %>% 
  ggplot(., aes(x = as.factor(STATEFP10), y = ALAND10)) +
  geom_boxplot(aes(fill = STATEFP10))

d.counties %>% 
  ggplot(., aes(x = ALAND10)) +
  geom_histogram(aes(fill = STATEFP10)) +
  labs(title = "not the most usefull plot")
```
```{r spatial operations}
d.counties %>% sf::st_crs()
d.stations %>% sf::st_crs() 
d.counties %>% sf::st_crs() == d.stations %>% sf::st_crs()

del.counties <- d.counties %>% dplyr::filter(STATEFP10 == 10)
del.stations <- sf::st_intersection(d.stations, del.counties)

glimpse(del.stations)
plot(del.stations)

del.counties %>% st_area()
```

## Task 1
```{r 1.1}
#Psuedocode
#group variables by state and mutate column that holds state area
#mutate column that divides land area by state area

#create new df
task1.1 <- d.counties %>% group_by(STATEFP10) %>% 
  mutate(stateArea = sum(ALAND10 + AWATER10)) %>% 
  ungroup(.) %>% 
  mutate(perLandAreaState = ALAND10/stateArea * 100) #create percentage variable by dividing land by state area and multiplying by 100

glimpse(task1.1$perLandAreaState)
```

```{r 1.2}
#group by state, find max of awater10/state area using slice
task1.2 <- task1.2 %>% as_tibble() %>% 
  group_by(STATEFP10) %>% 
  mutate(perWaterAreaState = AWATER10/stateArea * 100) %>% 
  slice(which.max(perWaterAreaState))

#create df with only state and county name columns
wettest_counties <- task1.2 %>% ungroup() %>% 
  dplyr::select(STATEFP10, NAMELSAD10)
wettest_counties
```

```{r 1.3}

```

