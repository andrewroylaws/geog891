{"frames":[{"func":"d.counties %>% dplyr::select(~(GEOID10:CLASSFP10)) %>% head()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"head(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dplyr::select(., ~(GEOID10:CLASSFP10))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"select.sf(., ~(GEOID10:CLASSFP10))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tidyselect::eval_select(quote(c(...)), .data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_select_impl(data, names(data), as_quosure(expr, env), include = include, \n    exclude = exclude, strict = strict, name_spec = name_spec, \n    allow_rename = allow_rename)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with_subscript_errors(vars_select_eval(vars, expr, strict, data = x, \n    name_spec = name_spec, uniquely_named = uniquely_named, allow_rename = allow_rename, \n    type = type), type = type)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(instrument_base_errors(expr), vctrs_error_subscript = function(cnd) {\n    cnd$subscript_action <- subscript_action(type)\n    cnd$subscript_elt <- \"column\"\n    cnd_signal(cnd) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"instrument_base_errors(expr)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, simpleError = function(cnd) {\n    abort(conditionMessage(cnd), parent = cnd)\n})","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vars_select_eval(vars, expr, strict, data = x, name_spec = name_spec, \n    uniquely_named = uniquely_named, allow_rename = allow_rename, \n    type = type)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"walk_data_tree(expr, data_mask, context_mask)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_c(expr, data_mask, context_mask)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"reduce_sels(node, data_mask, context_mask, init = init)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"walk_data_tree(new, data_mask, context_mask)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_formula(expr)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(glue_line(c(\"Formula shorthand must be wrapped in `where()`.\", \n    \"\", \"  # Bad\", \"  data %>% select({f})\", \"\", \"  # Good\", \n    \"  data %>% select(where({f}))\")))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: Formula shorthand must be wrapped in `where()`.\n\n  # Bad\n  data %>% select(~(GEOID10:CLASSFP10))\n\n  # Good\n  data %>% select(where(~(GEOID10:CLASSFP10)))\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}